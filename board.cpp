#include "board.hpp"




Board::Board() 
{
}


void Board::flip(vector<vector<int>> &table)
{
	for(int x = 0; x < 8; x++)
	{
		for(int y = 0; y < 4; y++)
		{
			swap(table[x][y], table[x][7-y]);
		}
	}
}

void Board::init_boards()
{
	flip(pst_b_p);
	flip(pst_b_kn);
	flip(pst_b_b);
	flip(pst_b_r);
	flip(pst_b_q);
	flip(pst_b_k_mid);
	flip(pst_b_k_end);
}

std::vector<std::vector<int>> Board::starting_position 
{
	{ W_R,  W_P, 0, 0, 0, 0, B_P, B_R  },
	{ W_KN, W_P, 0, 0, 0, 0, B_P, B_KN },
	{ W_B,  W_P, 0, 0, 0, 0, B_P, B_B  },
	{ W_Q,  W_P, 0, 0, 0, 0, B_P, B_Q  },
	{ W_K,  W_P, 0, 0, 0, 0, B_P, B_K  },
	{ W_B,  W_P, 0, 0, 0, 0, B_P, B_B  },
	{ W_KN, W_P, 0, 0, 0, 0, B_P, B_KN },
	{ W_R,  W_P, 0, 0, 0, 0, B_P, B_R  }
};

std::vector<std::vector<int>> Board::pst_w_p 
{
	{ 0,   5,  5,  0,  5, 10, 50, 0 },
	{ 0,  10, -5,  0,  5, 10, 50, 0 },
	{ 0,  10,-10,  0, 10, 20, 50, 0 },
	{ 0, -20,  0, 20, 25, 30, 50, 0 },
	{ 0, -20,  0, 20, 25, 30, 50, 0 },
	{ 0,  10, -5,  0,  5, 10, 50, 0 },
	{ 0,  10, -5,  0,  5, 10, 50, 0 },
	{ 0,   5,  5,  0,  5, 10, 50, 0 }
};

std::vector<std::vector<int>> Board::pst_w_kn
{
	{ -50, -40, -30, -30, -30, -30, -40, -50 },
	{ -40, -20, 5, 0,  5, 0, -20, -40 },
	{ -30, 0, 10, 15, 15, 10, 0, -30 },
	{ -30, 5, 15, 20, 20, 15, 5, -30 },
	{ -30, 5, 15, 20, 20, 15, 5, -30 },
	{ -30, 0, 10, 15, 15, 10, 0, -30 },
	{ -40, -20, 5, 0,  5, 0, -20, -40 },
	{ -50, -40, -30, -30, -30, -30, -40, -50 }
};

vector<vector<int>> Board::pst_w_b
{
	{ -20, -10, -10, -10, -10, -10, -10, -20 },
	{ -10, 5, 10, 0, 5, 0, 0, -10 },
	{ -10, 0, 10, 10, 5, 5, 0, -10 },
	{ -10, 0, 10, 10, 10, 10, 0, -10 },
	{ -10, 0, 10, 10, 10, 10, 0, -10 },
	{ -10, 0, 10, 10, 5, 5, 0, -10 },
	{ -10, 5, 10, 0, 5, 0, 0, -10 },
	{ -20, -10, -10, -10, -10, -10, -10, -20 }
};

vector<vector<int>> Board::pst_w_r
{
	{ 0, -5, -5, -5, -5, -5, 5, 0 },
	{ 0, 0, 0, 0, 0, 0, 10, 0 },
	{ 0, 0, 0, 0, 0, 0, 10, 0 },
	{ 5, 0, 0, 0, 0, 0, 10, 0 },
	{ 5, 0, 0, 0, 0, 0, 10, 0 },
	{ 0, 0, 0, 0, 0, 0, 10, 0 },
	{ 0, 0, 0, 0, 0, 0, 10, 0 },
	{ 0, -5, -5, -5, -5, -5, 5, 0 }
};

vector<vector<int>> Board::pst_w_q
{
	{ -20, -10, -10, 0, -5, -10, -10, -20 },
	{ -10, 0, 5, 0, 0, 0, 0, -10 },
	{ -10, 5, 5, 5, 5, 5, 0, -10 },
	{ -5, 0, 5, 5, 5, 5, 0, -5 },
	{ -5, 0, 5, 5, 5, 5, 0, -5 },
	{ -10, 0, 5, 5, 5, 5, 0, -10 },
	{ -10, 0, 0, 0, 0, 0, 0, -10 },
	{ -20, -10, -10, -5, -5, -10, -10, -20 }
};

vector<vector<int>> Board::pst_w_k_mid
{
	{ 20, 20, -10, -20, -30, -30, -30, -30 },
	{ 30, 20, -20, -30, -40, -40, -40, -40 },
	{ 10, 0, -20, -30, -40, -40, -40, -40 },
	{ 0, 0, -20, -40, -50, -50, -50, -50 },
	{ 0, 0, -20, -40, -50, -50, -50, -50 },
	{ 10, 0, -20, -30, -40, -40, -40, -40 },
	{ 30, 20, -20, -30, -40, -40, -40, -40 },
	{ 20, 20, -10, -20, -30, -30, -30, -30 }
};

vector<vector<int>> Board::pst_w_k_end
{
	{ -50, -30, -30, -30, -30, -30, -30, -50 },
	{ -30, -30, -10, -10, -10, -10, -20, -40 },
	{ -30, 0, 20, 30, 30, 20, -10, -30 },
	{ -30, 0, 30, 40, 40, 30, 0, -20 },
	{ -30, 0, 30, 40, 40, 30, 0, -20 },
	{ -30, 0, 20, 30, 30, 20, -10, -30 },
	{ -30, -30, -10, -10, -10, -10, -20, -40 },
	{ -50, -30, -30, -30, -30, -30, -30, -50 }
};

vector<vector<int>> Board::pst_b_p(pst_w_p.begin(), pst_w_p.end());
vector<vector<int>> Board::pst_b_kn(pst_w_kn.begin(), pst_w_kn.end());	
vector<vector<int>> Board::pst_b_b(pst_w_b.begin(), pst_w_b.end());
vector<vector<int>> Board::pst_b_r(pst_w_r.begin(), pst_w_r.end());	
vector<vector<int>> Board::pst_b_q(pst_w_q.begin(), pst_w_q.end());	
vector<vector<int>> Board::pst_b_k_mid(pst_w_k_mid.begin(), pst_w_k_mid.end());	
vector<vector<int>> Board::pst_b_k_end(pst_w_k_end.begin(), pst_w_k_end.end());

